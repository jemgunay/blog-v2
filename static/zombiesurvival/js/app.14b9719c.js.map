{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/components/Game.vue?80ef","webpack:///./src/App.vue","webpack:///./src/components/Game.vue","webpack:///./src/assets/js/game/Input.js","webpack:///./src/assets/js/game/Entity.js","webpack:///./src/assets/js/game/ResourceManager.js","webpack:///./src/assets/js/game/Util.js","webpack:///./src/assets/js/game/Weapon.js","webpack:///./src/assets/js/game/Projectile.js","webpack:///./src/assets/js/game/Player.js","webpack:///./src/assets/js/game/LevelManager.js","webpack:///./src/assets/js/game/Zombie.js","webpack:///./src/assets/js/game/Decal.js","webpack:///./src/assets/js/game/World.js","webpack:///./src/assets/js/game/UI.js","webpack:///./src/assets/js/game/Game.js","webpack:///./src/components/Game.vue?374d","webpack:///./src/App.vue?dfb6","webpack:///./src/main.js","webpack:///./src/App.vue?44a1"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","id","KeyA","KeyD","KeyW","KeyS","KeyR","KeyQ","KeyE","Key1","Key2","Key3","Key4","Key5","KeyLeft","KeyRight","KeyUp","KeyDown","keyLookup","isKeyPressed","undefined","mousePosition","x","y","mouseDown","isMouseDown","getMousePosition","Init","stage","addEventListener","event","toUpperCase","on","global","Entity","radius","pos","Math","atan2","this","position","globalPos","getGlobalPosition","sqrt","pow","container","centerX","width","centerY","height","halfWidth","halfHeight","vx","vy","combinedHalfWidths","combinedHalfHeights","abs","dist","distanceTo","totalLength","debugCircle","PIXI","beginFill","drawCircle","endFill","addChild","Load","completedCallback","shared","add","load","LoadFramesFromTexture","frameStore","prefix","endFrame","frames","num","from","GetTexture","TextureCache","GetSprite","GetFrames","console","error","PlaySound","resources","sound","play","DegToRad","deg","PI","RandomInt","min","max","floor","random","RandomBool","Shuffle","arr","SemiAutoTrigger","AutoTrigger","ClipReload","ShellReload","IdleState","ShootingState","EmptyBarrelState","EmptyClipState","ReloadingState","PistolAmmo","RifleAmmo","ShotgunAmmo","Armoury","ammo","count","ammoDropSize","projectileSpeed","projectileDamage","spriteName","weapons","equipped","equippedIndex","switching","weapon","equip","slotIndex","state","ResourceManager","setTimeout","AmmoDrop","ammoType","anchor","set","scale","rotation","Util","Weapon","properties","trigger","shootDuration","reloadDuration","reloadType","ammoCapacity","ammoLoaded","projectilesPerShot","spread","offsetDist","offsetAngle","idleFrame","shootFrame","attackSounds","reloadSound","emptySound","assign","Pistol","AssaultRifle","Shotgun","Manager","projectiles","currentID","projectile","timeout","drop","clearTimeout","removeChild","filter","el","Projectile","damage","speed","cos","sin","delta","Player","sprite","animationSpeed","alive","playingWalkingSound","armoury","addWeapon","Game","ui","setAmmoText","xv","yv","Input","mousePos","angleBetweenGlobal","equipPrevious","equipNext","gotoAndStop","reload","randSoundIndex","randSound","rotationOffset","rot","projectilePos","newProjectile","diff","requiredAmmo","LevelManager","levels","zombieCount","spawnTime","zombieSpeed","currentLevelNum","currentLevel","setRoundText","tick","readyToSpawn","torsoColours","hairColours","Zombie","maxSpeed","legsSprite","angle","armsSprite","randTorsoColour","torsoSprite","randHairColour","headSprite","rotSpeed","acceleration","setNormalSpeed","health","targetSpeed","children","targetFunc","targetPos","distToPlayer","targetRot","angleBetween","hitPoints","NewDirectionalBlood","alpha","NewDownwardBlood","World","app","sortableChildren","zombies","projectileManager","groundSprite","screen","worldMapSpriteBottom","bloodContainer","gibs","ammoDropContainer","player","zombieContainer","worldMapSpriteTop","levelManager","next","ticker","step","shouldSpawn","spawnZombie","sort","a","b","hitTestCircle","setSlowSpeed","endGame","playerPos","cameraVel","ammoDrop","attack","zombie","applyDamage","newSplat","Decal","ammoTypes","keys","randAmmoKey","randAmmoType","gibNums","gibSprite","rotDir","randOffset","randRot","incrementKillCounter","gib","randRadius","spawnPos","spawnAngle","newZombie","setTargetFunc","newTarget","randomPositionOffScreen","die","numericLookup","1","2","3","4","5","6","7","8","9","10","UI","textStyle","fontFamily","fontSize","fill","stroke","strokeThickness","roundText","weaponText","ammoText","killCountText","killCount","zIndex","round","text","weaponName","loaded","unloaded","init","WebFont","custom","families","urls","active","start","clientWidth","clientHeight","transparent","antialias","appendChild","view","hitArea","interactive","world","mounted","loadingText","document","getElementById","dotCount","setInterval","innerHTML","repeat","render","__scopeId","components","createApp","App","mount"],"mappings":"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","file":"js/app.14b9719c.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./Game.vue?vue&type=style&index=0&id=5e1dd4d8&scoped=true&lang=css\"","<template>\n  <Game/>\n</template>\n\n<script>\nimport Game from \"./components/Game.vue\";\n\nexport default {\n    name: \"App\",\n    components: {\n        Game\n    }\n};\n</script>\n\n<style>\nbody {\n  background-color: #2c3e50;\n  padding: 0;\n}\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n</style>\n","<template>\n    <div id=\"container\">\n        <p id=\"loading-text\"></p>\n        <div id=\"game\"></div>\n        <div id=\"controls\">\n            <div class=\"control-pane\">\n                <p>Move - WASD</p>\n                <p>Reload - R</p>\n                <p><a href=\"https://github.com/jemgunay/zombiesurvival\" target=\"_blank\">GitHub</a></p>\n            </div>\n            <div class=\"control-pane\" id=\"control-pane-right\">\n                <p>Q - Previous Weapon</p>\n                <p>E - Next Weapon</p>\n                <p>1/2/3 - Switch Weapon</p>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\nimport {Game} from \"@/assets/js/game/Game.js\";\n\nexport default {\n    name: \"Game\",\n    mounted() {\n        // loading text ellipsis\n        let loadingText = document.getElementById(\"loading-text\");\n        let dotCount = 0;\n        setInterval(function () {\n            if (dotCount === 3) {\n                dotCount = 0;\n            } else {\n                dotCount++;\n            }\n            loadingText.innerHTML = \"Loading\" + \".\".repeat(dotCount);\n        }, 500);\n\n        // start game\n        this.container = document.getElementById(\"game\");\n        Game.init(this.container);\n    }\n};\n</script>\n\n<style scoped>\n    #game {\n        width: 720px;\n        height: 480px;\n        margin-left: auto;\n        margin-right: auto;\n    }\n\n    #loading-text {\n        position: absolute;\n        z-index: -1;\n        top: 32%;\n        left: 50%;\n        transform: translate(-50%, -50%);\n        font-family: \"ds-zombie-cyr\";\n        font-size: 1.5em;\n    }\n\n    #controls {\n        text-align: center;\n    }\n\n    .control-pane {\n        display: inline-block;\n        width: 200px;\n        text-align: right;\n        vertical-align: top;\n    }\n\n    .control-pane:nth-child(2) {\n        text-align: left;\n    }\n\n    p {\n        color: #FFFFFF;\n        margin: 10px 15px;\n        /* prevent text from being highlighted */\n        -webkit-touch-callout: none;\n        -webkit-user-select: none;\n        -khtml-user-select: none;\n        -moz-user-select: none;\n        -ms-user-select: none;\n        user-select: none;\n    }\n\n    .control-pane a, .control-pane a:hover, .control-pane a:visited {\n        color: #FFFFFF;\n    }\n\n    .control-pane a:hover {\n        color: #838383;\n    }\n</style>\n","// handle keyboard input\nexport const KeyA = \"A\";\nexport const KeyD = \"D\";\nexport const KeyW = \"W\";\nexport const KeyS = \"S\";\nexport const KeyR = \"R\";\nexport const KeyQ = \"Q\";\nexport const KeyE = \"E\";\nexport const Key1 = \"1\";\nexport const Key2 = \"2\";\nexport const Key3 = \"3\";\nexport const Key4 = \"4\";\nexport const Key5 = \"5\";\nexport const KeyLeft = \"ARROWLEFT\";\nexport const KeyRight = \"ARROWRIGHT\";\nexport const KeyUp = \"ARROWUP\";\nexport const KeyDown = \"ARROWDOWN\";\n\nlet keyLookup = {};\n\nexport function isKeyPressed(key) {\n    if (keyLookup[key] === undefined) {\n        keyLookup[key] = false;\n    }\n    return keyLookup[key];\n}\n\n// handle mouse input\nlet mousePosition = {x: 0, y: 0};\nlet mouseDown = false;\n\nexport function isMouseDown() {\n    return mouseDown;\n}\n\nexport function getMousePosition() {\n    return mousePosition;\n}\n\n// set up listeners\nexport function Init(stage) {\n    // listen for handle key presses\n    window.addEventListener(\"keydown\", event => {\n        keyLookup[event.key.toUpperCase()] = true;\n    }, false);\n\n    // listen for key releases\n    window.addEventListener(\"keyup\", event => {\n        keyLookup[event.key.toUpperCase()] = false;\n    }, false);\n\n    // listen for mouse click\n    stage\n        .on(\"mousedown\", () => {mouseDown = true;})\n        .on(\"pointerdown\", () => {mouseDown = true;})\n        .on(\"mouseup\", () => {mouseDown = false;})\n        .on(\"pointerup\", () => {mouseDown = false;});\n\n    // listen for mouse movement\n    stage.on(\"mousemove\", (event) => {\n        mousePosition.x = event.data.global.x;\n        mousePosition.y = event.data.global.y;\n    });\n}","import * as PIXI from \"pixi.js\";\n\nexport class Entity extends PIXI.Container {\n    constructor(radius) {\n        super();\n        this.radius = radius;\n    }\n\n    angleBetween(pos) {\n        return Math.atan2(pos.y - this.position.y, pos.x - this.position.x);\n    }\n\n    angleBetweenGlobal(pos) {\n        let globalPos = this.getGlobalPosition();\n        return Math.atan2(pos.y - globalPos.y, pos.x - globalPos.x);\n    }\n\n    distanceTo(pos) {\n        return Math.sqrt(Math.pow(this.position.x - pos.x, 2) + Math.pow(this.position.y - pos.y, 2));\n    }\n\n    hitTestRect(container) {\n        // find the center points of each sprite\n        container.centerX = container.x + container.width / 2;\n        container.centerY = container.y + container.height / 2;\n        this.centerX = this.x + this.width / 2;\n        this.centerY = this.y + this.height / 2;\n\n        // find the half-widths and half-heights of each sprite\n        container.halfWidth = container.width / 2;\n        container.halfHeight = container.height / 2;\n        this.halfWidth = this.width / 2;\n        this.halfHeight = this.height / 2;\n\n        // calculate the distance vector between the sprites\n        let vx = container.centerX - this.centerX;\n        let vy = container.centerY - this.centerY;\n\n        // figure out the combined half-widths and half-heights\n        let combinedHalfWidths = container.halfWidth + this.halfWidth;\n        let combinedHalfHeights = container.halfHeight + this.halfHeight;\n\n        return Math.abs(vx) < combinedHalfWidths && Math.abs(vy) < combinedHalfHeights;\n    }\n\n    hitTestCircle(container) {\n        let dist = this.distanceTo(container.position);\n        let totalLength = container.radius + this.radius;\n        return dist <= totalLength;\n    }\n\n    debugDraw(stage) {\n        if (this.debugCircle === undefined) {\n            this.debugCircle = new PIXI.Graphics();\n            this.debugCircle.beginFill(0x9966FF);\n            this.debugCircle.drawCircle(0, 0, this.radius);\n            this.debugCircle.endFill();\n            stage.addChild(this.debugCircle);\n        }\n        this.debugCircle.position.x = this.position.x;\n        this.debugCircle.position.y = this.position.y;\n    }\n}","import * as PIXI from \"pixi.js\";\nimport \"pixi-sound\";\n\n// loads all sprite sheets into memory, then process frames out of them for consumption during sprite creation.\nexport function Load(completedCallback) {\n    PIXI.Loader.shared\n        // sprite sheets\n        .add(\"player\", \"game/images/sprite_sheets/player.json\")\n        .add(\"normal_zombie_head_brunette\", \"game/images/sprite_sheets/normal_zombie_head_brunette.json\")\n        .add(\"normal_zombie_head_blonde\", \"game/images/sprite_sheets/normal_zombie_head_blonde.json\")\n        .add(\"normal_zombie_head_ginger\", \"game/images/sprite_sheets/normal_zombie_head_ginger.json\")\n        .add(\"normal_zombie_torso_blue\", \"game/images/sprite_sheets/normal_zombie_torso_blue.json\")\n        .add(\"normal_zombie_torso_green\", \"game/images/sprite_sheets/normal_zombie_torso_green.json\")\n        .add(\"normal_zombie_torso_orange\", \"game/images/sprite_sheets/normal_zombie_torso_orange.json\")\n        .add(\"normal_zombie_torso_purple\", \"game/images/sprite_sheets/normal_zombie_torso_purple.json\")\n        .add(\"normal_zombie_torso_grey\", \"game/images/sprite_sheets/normal_zombie_torso_grey.json\")\n        .add(\"normal_zombie_torso_red\", \"game/images/sprite_sheets/normal_zombie_torso_red.json\")\n        .add(\"normal_zombie_arms\", \"game/images/sprite_sheets/normal_zombie_arms.json\")\n        .add(\"normal_zombie_legs\", \"game/images/sprite_sheets/normal_zombie_legs.json\")\n        // images\n        .add(\"grass\", \"game/images/grass.jpg\")\n        .add(\"directional_blood_splat\", \"game/images/directional_blood_splat.png\")\n        .add(\"downward_blood_splat\", \"game/images/downward_blood_splat.png\")\n        .add(\"farm_border_top\", \"game/images/farm_border_top.png\")\n        .add(\"farm_border_bottom\", \"game/images/farm_border_bottom.png\")\n        // zombie images\n        .add(\"normal_zombie_gib_1\", \"game/images/gibs/normal_zombie_gib_1.png\")\n        .add(\"normal_zombie_gib_2\", \"game/images/gibs/normal_zombie_gib_2.png\")\n        .add(\"normal_zombie_gib_3\", \"game/images/gibs/normal_zombie_gib_3.png\")\n        .add(\"normal_zombie_gib_4\", \"game/images/gibs/normal_zombie_gib_4.png\")\n        .add(\"normal_zombie_gib_5\", \"game/images/gibs/normal_zombie_gib_5.png\")\n        .add(\"normal_zombie_gib_6\", \"game/images/gibs/normal_zombie_gib_6.png\")\n        .add(\"normal_zombie_gib_7\", \"game/images/gibs/normal_zombie_gib_7.png\")\n        // ammo images\n        .add(\"pistol_ammo\", \"game/images/ammo/pistol_ammo.png\")\n        .add(\"rifle_ammo\", \"game/images/ammo/rifle_ammo.png\")\n        .add(\"shotgun_ammo\", \"game/images/ammo/shotgun_ammo.png\")\n        // weapon sounds\n        .add(\"1911_pistol_shoot_1\", \"game/sounds/1911_pistol/1911_pistol_shot_1.wav\")\n        .add(\"1911_pistol_shoot_2\", \"game/sounds/1911_pistol/1911_pistol_shot_2.wav\")\n        .add(\"1911_pistol_reload\", \"game/sounds/1911_pistol/pistol_reload.mp3\")\n        .add(\"pistol_empty\", \"game/sounds/1911_pistol/pistol_dryfire.wav\")\n        .add(\"g3_rifle_shoot_1\", \"game/sounds/g3_rifle/g3_rifle_shot_1.wav\")\n        .add(\"g3_rifle_shoot_2\", \"game/sounds/g3_rifle/g3_rifle_shot_2.wav\")\n        .add(\"g3_rifle_reload\", \"game/sounds/g3_rifle/rifle_reload.mp3\")\n        .add(\"rifle_empty\", \"game/sounds/g3_rifle/rifle_dryfire.wav\")\n        .add(\"spas_12_shotgun_shoot_1\", \"game/sounds/spas_12_shotgun/spas_12_shotgun_shot_1.wav\")\n        .add(\"spas_12_shotgun_shoot_2\", \"game/sounds/spas_12_shotgun/spas_12_shotgun_shot_2.wav\")\n        .add(\"spas_12_shotgun_insert_shell\", \"game/sounds/spas_12_shotgun/spas_12_shotgun_insert_shell.wav\")\n        .add(\"change_weapon\", \"game/sounds/change_weapon.wav\")\n        .add(\"ammo_pickup\", \"game/sounds/ammo_pickup.wav\")\n        // flesh impact sounds\n        .add(\"flesh_impact_1\", \"game/sounds/flesh_impact/blt_imp_flesh_lyr_plr_10.wav\")\n        .add(\"flesh_impact_2\", \"game/sounds/flesh_impact/blt_imp_flesh_plr_04.wav\")\n        .add(\"flesh_impact_3\", \"game/sounds/flesh_impact/blt_imp_flesh_plr_05.wav\")\n        .add(\"flesh_impact_4\", \"game/sounds/flesh_impact/blt_imp_flesh_plr_11.wav\")\n        .add(\"flesh_impact_5\", \"game/sounds/flesh_impact/bullet_flesh_head_npc_02.wav\")\n        .add(\"flesh_impact_6\", \"game/sounds/flesh_impact/bullet_flesh_head_npc_03.wav\")\n        .add(\"flesh_impact_7\", \"game/sounds/flesh_impact/bullet_flesh_head_npc_04.wav\")\n        .add(\"flesh_impact_8\", \"game/sounds/flesh_impact/bullet_flesh_head_npc_05.wav\")\n        .add(\"flesh_explode_1\", \"game/sounds/flesh_explode/gib_body_explode_01.wav\")\n        .add(\"flesh_explode_2\", \"game/sounds/flesh_explode/gib_body_explode_02.wav\")\n        .add(\"flesh_explode_3\", \"game/sounds/flesh_explode/gib_body_explode_03.wav\")\n        .add(\"flesh_explode_4\", \"game/sounds/flesh_explode/gib_body_explode_09.wav\")\n        // walk on grass sounds\n        .add(\"walk_grass_1\", \"game/sounds/walk_grass/step_sprint_grass_short_r_01.wav\")\n        .add(\"walk_grass_2\", \"game/sounds/walk_grass/step_sprint_grass_short_r_02.wav\")\n        .add(\"walk_grass_3\", \"game/sounds/walk_grass/step_sprint_grass_short_r_03.wav\")\n        .load(function () {\n            // generate frames from sprite sheets\n            LoadFramesFromTexture(\"player\", 5);\n            LoadFramesFromTexture(\"normal_zombie_head_brunette\", 19);\n            LoadFramesFromTexture(\"normal_zombie_head_blonde\", 19);\n            LoadFramesFromTexture(\"normal_zombie_head_ginger\", 19);\n            LoadFramesFromTexture(\"normal_zombie_torso_blue\", 19);\n            LoadFramesFromTexture(\"normal_zombie_torso_green\", 19);\n            LoadFramesFromTexture(\"normal_zombie_torso_orange\", 19);\n            LoadFramesFromTexture(\"normal_zombie_torso_purple\", 19);\n            LoadFramesFromTexture(\"normal_zombie_torso_grey\", 19);\n            LoadFramesFromTexture(\"normal_zombie_torso_red\", 19);\n            LoadFramesFromTexture(\"normal_zombie_arms\", 19);\n            LoadFramesFromTexture(\"normal_zombie_legs\", 33);\n            completedCallback();\n        });\n}\n\nlet frameStore = {};\n\n// loads N frames from a given sprite sheet and stores them.\nexport function LoadFramesFromTexture(prefix, endFrame) {\n    let frames = [];\n    let num = \"\";\n    for (let i = 0; i < endFrame; i++) {\n        if (i > 99) {\n            num = `0${i}`;\n        } else if (i > 9) {\n            num = `00${i}`;\n        } else {\n            num = `000${i}`;\n        }\n        frames.push(PIXI.Texture.from(prefix + num));\n    }\n    frameStore[prefix] = frames;\n}\n\n// GetTexture returns a cached image texture.\nexport function GetTexture(prefix) {\n    return PIXI.utils.TextureCache[prefix];\n}\n\n// GetSprite creates a spite from a cached image texture.\nexport function GetSprite(prefix) {\n    return new PIXI.Sprite(PIXI.utils.TextureCache[prefix]);\n}\n\n// returns the pre-processed frames corresponding with the provided prefix from the store.\nexport function GetFrames(prefix) {\n    if (!(prefix in frameStore)) {\n        console.error(\"frames not generated for \" + prefix);\n        return;\n    }\n    return frameStore[prefix];\n}\n\nexport function PlaySound(name) {\n    PIXI.Loader.shared.resources[name].sound.play();\n}","export function DegToRad(deg) {\n    return deg * Math.PI/180;\n}\n\nexport function RadToDeg(rad) {\n    return rad * 180/Math.PI;\n}\n\nexport function RandomInt(min, max) {\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\nexport function RandomBool() {\n    return RandomInt(0, 1) === 0;\n}\n\nexport function Shuffle(arr) {\n    for (let i = arr.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        [arr[i], arr[j]] = [arr[j], arr[i]];\n    }\n    return arr;\n}","import * as ResourceManager from \"./ResourceManager\";\nimport * as PIXI from \"pixi.js\";\nimport * as Util from \"./Util\";\n\nexport const SemiAutoTrigger = \"semi\";\nexport const AutoTrigger = \"auto\";\n\nexport const ClipReload = \"clip\";\nexport const ShellReload = \"shell\";\n\nexport const IdleState = \"idle\";\nexport const ShootingState = \"shooting\";\nexport const EmptyBarrelState = \"empty_barrel\";\nexport const EmptyClipState = \"empty_clip\";\nexport const ReloadingState = \"reloading\";\n\nexport const PistolAmmo = \"pistol_ammo\";\nexport const RifleAmmo = \"rifle_ammo\";\nexport const ShotgunAmmo = \"shotgun_ammo\";\n\nexport class Armoury {\n    constructor() {\n        this.ammo = {};\n        this.ammo[PistolAmmo] = {\n            name: PistolAmmo,\n            count: 40,\n            ammoDropSize: 10,\n            projectileSpeed: 16,\n            projectileDamage: 40,\n            spriteName: \"pistol_ammo\"\n        };\n        this.ammo[RifleAmmo] = {\n            name: RifleAmmo,\n            count: 60,\n            ammoDropSize: 30,\n            projectileSpeed: 18,\n            projectileDamage: 34,\n            spriteName: \"rifle_ammo\"\n        };\n        this.ammo[ShotgunAmmo] = {\n            name: ShotgunAmmo,\n            count: 4,\n            ammoDropSize: 8,\n            projectileSpeed: 16,\n            projectileDamage: 22,\n            spriteName: \"shotgun_ammo\"\n        };\n        this.weapons = [];\n        this.equipped = null;\n        this.equippedIndex = null;\n        this.switching = false;\n    }\n\n    addWeapon(weapon) {\n        this.weapons.push(weapon);\n        // if no weapons are equipped, equip the first added weapon\n        if (!this.equipped) {\n            this.equip(0);\n        }\n    }\n\n    equip(slotIndex) {\n        if (slotIndex > this.weapons.length - 1 || this.switching) {\n            return;\n        }\n        if (this.equipped !== null && this.equipped.state !== IdleState) {\n            return;\n        }\n        if (this.equippedIndex === slotIndex) {\n            return;\n        }\n        this.equippedIndex = slotIndex;\n        this.equipped = this.weapons[slotIndex];\n        ResourceManager.PlaySound(\"change_weapon\");\n\n        this.switching = true;\n        setTimeout(() => {\n            this.switching = false;\n        }, 500);\n    }\n\n    equipPrevious() {\n        if (this.equippedIndex === 0) {\n            this.equip(this.weapons.length - 1);\n            return;\n        }\n        this.equip(this.equippedIndex - 1);\n    }\n\n    equipNext() {\n        if (this.equippedIndex === this.weapons.length - 1) {\n            this.equip(0);\n            return;\n        }\n        this.equip(this.equippedIndex + 1);\n    }\n}\n\nexport class AmmoDrop extends PIXI.Sprite {\n    constructor(x, y, ammoType) {\n        super(ResourceManager.GetTexture(ammoType.spriteName));\n\n        this.anchor.set(0.5, 0.5);\n        this.scale.set(0.7);\n        this.radius = 10;\n        this.position.set(x, y);\n        this.rotation = Util.DegToRad(Util.RandomInt(0, 360));\n        this.ammoType = ammoType;\n    }\n}\n\nexport class Weapon {\n    constructor(properties) {\n        this.name = \"\";\n        this.trigger = \"\";\n        this.shootDuration = 0;\n        this.reloadDuration = 0;\n        this.reloadType = \"\";\n        this.ammoCapacity = 0;\n        this.ammoLoaded = 0;\n        this.projectilesPerShot = 0;\n        this.spread = 0;\n        this.offsetDist = 0;\n        this.offsetAngle = 0;\n        this.ammoType = null;\n        this.idleFrame = 0;\n        this.shootFrame = 0;\n        this.state = IdleState;\n        this.attackSounds = [];\n        this.reloadSound = \"\";\n        this.emptySound = \"\";\n\n        // if starting loaded ammo not specified, provide a full clip by default\n        if (!properties.ammoLoaded) {\n            this.ammoLoaded = properties.ammoCapacity;\n        }\n        Object.assign(this, properties);\n    }\n}\n\nexport class Pistol extends Weapon {\n    constructor() {\n        super({\n            name: \"1911\",\n            trigger: SemiAutoTrigger,\n            shootDuration: 190,\n            reloadDuration: 1700,\n            reloadType: ClipReload,\n            ammoCapacity: 10,\n            projectilesPerShot: 1,\n            spread: 1,\n            offsetDist: 25,\n            offsetAngle: 7,\n            ammoType: PistolAmmo,\n            idleFrame: 1,\n            shootFrame: 2,\n            attackSounds: [\n                \"1911_pistol_shoot_1\",\n                \"1911_pistol_shoot_2\",\n            ],\n            reloadSound: \"1911_pistol_reload\",\n            emptySound: \"pistol_empty\",\n        });\n    }\n}\n\nexport class AssaultRifle extends Weapon {\n    constructor() {\n        super({\n            name: \"G3\",\n            trigger: AutoTrigger,\n            shootDuration: 150,\n            reloadDuration: 2000,\n            reloadType: ClipReload,\n            ammoCapacity: 30,\n            projectilesPerShot: 1,\n            spread: 3,\n            offsetDist: 45,\n            offsetAngle: 20,\n            ammoType: RifleAmmo,\n            idleFrame: 3,\n            shootFrame: 4,\n            attackSounds: [\n                \"g3_rifle_shoot_1\",\n                \"g3_rifle_shoot_2\",\n            ],\n            reloadSound: \"g3_rifle_reload\",\n            emptySound: \"rifle_empty\",\n        });\n    }\n}\n\nexport class Shotgun extends Weapon {\n    constructor() {\n        super({\n            name: \"SPAS-12\",\n            trigger: SemiAutoTrigger,\n            shootDuration: 800,\n            reloadDuration: 600,\n            reloadType: ShellReload,\n            ammoCapacity: 8,\n            projectilesPerShot: 12,\n            spread: 18,\n            offsetDist: 45,\n            offsetAngle: 0,\n            ammoType: ShotgunAmmo,\n            idleFrame: 1,\n            shootFrame: 2,\n            attackSounds: [\n                \"spas_12_shotgun_shoot_1\",\n                \"spas_12_shotgun_shoot_2\",\n            ],\n            reloadSound: \"spas_12_shotgun_insert_shell\",\n            emptySound: \"rifle_empty\",\n        });\n    }\n}\n\n/*export class TurboRifle extends Weapon {\n    constructor() {\n        super({\n            name: \"Turbo Rifle\",\n            trigger: AutoTrigger,\n            shootDuration: 50,\n            reloadDuration: 500,\n            reloadType: ClipReload,\n            ammoCapacity: 10000,\n            projectilesPerShot: 5,\n            spread: 10,\n            offsetDist: 45,\n            offsetAngle: 20,\n            ammoType: RifleAmmo,\n            idleFrame: 3,\n            shootFrame: 4,\n            attackSounds: [\n                \"g3_rifle_shoot_1\",\n                \"g3_rifle_shoot_2\",\n            ],\n            reloadSound: \"g3_rifle_reload\",\n            emptySound: \"rifle_empty\",\n        });\n    }\n}*/\n","import * as PIXI from \"pixi.js\";\n\nexport class Manager {\n    constructor(container) {\n        this.container = container;\n        this.projectiles = [];\n        this.currentID = 0;\n    }\n\n    push(projectile) {\n        // give projectile unique ID to allow deletion\n        projectile.id = this.currentID;\n        this.currentID++;\n        this.projectiles.push(projectile);\n        this.container.addChild(projectile);\n        // expire bullet after 5 seconds if no collision\n        projectile.timeout = setTimeout(() => {\n            this.drop(projectile);\n        }, 5000);\n    }\n\n    drop(projectile) {\n        clearTimeout(projectile.timeout);\n        this.container.removeChild(projectile);\n        this.projectiles = this.projectiles.filter(function (el) {\n            return el.id !== projectile.id;\n        });\n    }\n}\n\nexport class Projectile extends PIXI.Graphics {\n    constructor(x, y, rotation, damage, speed) {\n        super();\n\n        this.damage = damage;\n        this.radius = 2;\n        this.beginFill(0x191919);\n        this.drawCircle(0, 0, this.radius);\n        this.endFill();\n        this.position.set(x, y);\n\n        this.vx = Math.cos(rotation) * speed;\n        this.vy = Math.sin(rotation) * speed;\n    }\n\n    step(delta) {\n        this.x += this.vx * delta;\n        this.y += this.vy * delta;\n    }\n}","import * as PIXI from \"pixi.js\";\nimport * as Input from \"./Input\";\nimport {Entity} from \"./Entity\";\nimport * as Weapon from \"./Weapon\";\nimport * as Projectile from \"./Projectile\";\nimport * as ResourceManager from \"./ResourceManager\";\nimport * as Util from \"./Util\";\nimport {Game} from \"./Game\";\n\nexport default class Player extends Entity {\n    constructor(x, y) {\n        super(18);\n\n        // create the player\n        let sprite = new PIXI.AnimatedSprite(ResourceManager.GetFrames(\"player\"));\n        sprite.anchor.set(0.5);\n        sprite.scale.set(0.8);\n        sprite.animationSpeed = 0.5;\n        this.sprite = sprite;\n\n        this.position.set(x, y);\n        this.rotation = Math.PI * 1.5;\n        this.speed = 1.2;\n        this.alive = true;\n        this.playingWalkingSound = false;\n        this.armoury = new Weapon.Armoury();\n        this.armoury.addWeapon(new Weapon.Pistol());\n        this.armoury.addWeapon(new Weapon.AssaultRifle());\n        this.armoury.addWeapon(new Weapon.Shotgun());\n        //this.armoury.addWeapon(new Weapon.TurboRifle());\n\n        this.addChild(sprite);\n    }\n\n    step(delta) {\n        // TODO: only update on change, not every frame\n        Game.ui.setAmmoText(this.armoury.equipped.name, this.armoury.equipped.ammoLoaded, this.armoury.ammo[this.armoury.equipped.ammoType].count);\n\n        if (this.alive === false) {\n            return;\n        }\n\n        // move player but prevent leaving world bounds\n        let xv = 0;\n        let yv = 0;\n        if ((Input.isKeyPressed(Input.KeyA) || Input.isKeyPressed(Input.KeyLeft)) && this.position.x > -95) {\n            xv = -1;\n        } else if ((Input.isKeyPressed(Input.KeyD) || Input.isKeyPressed(Input.KeyRight)) && this.position.x < 818) {\n            xv = 1;\n        }\n        if ((Input.isKeyPressed(Input.KeyW) || Input.isKeyPressed(Input.KeyUp)) && this.position.y > -145) {\n            yv = -1;\n        } else if ((Input.isKeyPressed(Input.KeyS) || Input.isKeyPressed(Input.KeyDown)) && this.position.y < 640) {\n            yv = 1;\n        }\n\n        // handle walking sounds\n        if (xv !== 0 || yv !== 0) {\n            if (!this.playingWalkingSound) {\n                this.playingWalkingSound = true;\n                ResourceManager.PlaySound(\"walk_grass_\" + Util.RandomInt(1, 3));\n\n                setTimeout(() => {\n                    this.playingWalkingSound = false;\n                }, 450);\n            }\n        }\n\n        // rotate player to point at mouse\n        this.position.set(this.position.x + xv * delta * this.speed, this.position.y + yv * delta * this.speed);\n        let mousePos = Input.getMousePosition();\n        this.rotation = this.angleBetweenGlobal(mousePos);\n\n        // handle weapon switching\n        if (Input.isKeyPressed(Input.Key1)) {\n            this.armoury.equip(0);\n        } else if (Input.isKeyPressed(Input.Key2)) {\n            this.armoury.equip(1);\n        } else if (Input.isKeyPressed(Input.Key3)) {\n            this.armoury.equip(2);\n        } else if (Input.isKeyPressed(Input.Key4)) {\n            this.armoury.equip(3);\n        } else if (Input.isKeyPressed(Input.Key5)) {\n            this.armoury.equip(4);\n        } else if (Input.isKeyPressed(Input.KeyQ)) {\n            this.armoury.equipPrevious();\n        } else if (Input.isKeyPressed(Input.KeyE)) {\n            this.armoury.equipNext();\n        }\n\n        // set idle frame to cover when weapon switch is complete\n        if (this.armoury.equipped.state === Weapon.IdleState) {\n            this.sprite.gotoAndStop(this.armoury.equipped.idleFrame);\n        }\n\n        // reload weapon\n        if (Input.isKeyPressed(Input.KeyR)) {\n            this.reload();\n        }\n        // enable shooting if weapon is in the empty barrel state, i.e. pistols\n        if (!Input.isMouseDown() && this.armoury.equipped.state === Weapon.EmptyBarrelState) {\n            this.armoury.equipped.state = Weapon.IdleState;\n        }\n    }\n\n    attack() {\n        if (this.armoury.equipped.state !== Weapon.IdleState || this.armoury.switching === true) {\n            return [];\n        }\n        // no ammo left in clip\n        if (this.armoury.equipped.ammoLoaded === 0) {\n            // play empty clip sound\n            this.armoury.equipped.state = Weapon.EmptyClipState;\n            if (this.armoury.equipped.emptySound !== \"\") {\n                ResourceManager.PlaySound(this.armoury.equipped.emptySound);\n            }\n            setTimeout(() => {\n                if (this.alive && this.armoury.equipped.state === Weapon.EmptyClipState) {\n                    this.armoury.equipped.state = Weapon.IdleState;\n                }\n            }, this.armoury.equipped.shootDuration);\n            return [];\n        }\n        this.armoury.equipped.state = Weapon.ShootingState;\n        this.sprite.gotoAndStop(this.armoury.equipped.shootFrame);\n        this.armoury.equipped.ammoLoaded--;\n\n        // play random attack sound\n        if (this.armoury.equipped.attackSounds.length > 0) {\n            let randSoundIndex = Util.RandomInt(0, this.armoury.equipped.attackSounds.length - 1);\n            let randSound = this.armoury.equipped.attackSounds[randSoundIndex];\n            ResourceManager.PlaySound(randSound);\n        }\n\n        // reset to idle frame\n        setTimeout(() => {\n            if (this.alive) {\n                this.sprite.gotoAndStop(this.armoury.equipped.idleFrame);\n            }\n        }, 100);\n\n        // end of attack - reset state\n        setTimeout(() => {\n            if (this.armoury.equipped.trigger === Weapon.SemiAutoTrigger) {\n                this.armoury.equipped.state = Weapon.EmptyBarrelState;\n                return;\n            }\n            this.armoury.equipped.state = Weapon.IdleState;\n        }, this.armoury.equipped.shootDuration);\n\n        // create projectile\n        let projectiles = [];\n        for (let i = 0; i < this.armoury.equipped.projectilesPerShot; i++) {\n            // apply random spread to simulate recoil\n            let rotationOffset = Util.RandomInt(0, this.armoury.equipped.spread);\n            if (Util.RandomBool()) {\n                rotationOffset *= -1;\n            }\n            // offset projectile from barrel of gun\n            const rot = this.rotation + Util.DegToRad(this.armoury.equipped.offsetAngle);\n            const projectilePos = {\n                x: this.position.x + (Math.cos(rot) * this.armoury.equipped.offsetDist),\n                y: this.position.y + (Math.sin(rot) * this.armoury.equipped.offsetDist),\n            };\n            // create projectile\n            let newProjectile = new Projectile.Projectile(\n                projectilePos.x,\n                projectilePos.y,\n                this.rotation + Util.DegToRad(rotationOffset),\n                this.armoury.ammo[this.armoury.equipped.ammoType].projectileDamage,\n                this.armoury.ammo[this.armoury.equipped.ammoType].projectileSpeed,\n            );\n\n            projectiles.push(newProjectile);\n        }\n        return projectiles;\n    }\n\n    reload() {\n        // only reload if not firing\n        if (this.armoury.equipped.state !== Weapon.IdleState) {\n            return;\n        }\n        // don't reload if clip is full\n        if (this.armoury.equipped.ammoLoaded === this.armoury.equipped.ammoCapacity) {\n            return;\n        }\n        // ensure we have enough ammo in the armoury\n        if (this.armoury.ammo[this.armoury.equipped.ammoType].count === 0) {\n            return;\n        }\n\n        this.armoury.equipped.state = Weapon.ReloadingState;\n\n        // default 1 ammo for ShellReload, override for ClipReload\n        let diff = 1;\n        if (this.armoury.equipped.reloadType === Weapon.ClipReload) {\n            // determine how much ammo is required from the armoury\n            const requiredAmmo = this.armoury.equipped.ammoCapacity - this.armoury.equipped.ammoLoaded;\n            if (this.armoury.ammo[this.armoury.equipped.ammoType].count >= requiredAmmo) {\n                diff = requiredAmmo;\n            } else {\n                diff = this.armoury.ammo[this.armoury.equipped.ammoType].count;\n            }\n        }\n\n        // start reload sound\n        ResourceManager.PlaySound(this.armoury.equipped.reloadSound);\n\n        setTimeout(() => {\n            // move ammo from armoury to weapon\n            this.armoury.ammo[this.armoury.equipped.ammoType].count -= diff;\n            this.armoury.equipped.ammoLoaded += diff;\n            this.armoury.equipped.state = Weapon.IdleState;\n        }, this.armoury.equipped.reloadDuration);\n    }\n\n    die() {\n        if (!this.alive) {\n            return;\n        }\n        // play flesh exploding sound\n        ResourceManager.PlaySound(\"flesh_explode_\" + Util.RandomInt(1, 4));\n        this.alive = false;\n        this.sprite.gotoAndStop(0);\n    }\n}","import * as Util from \"./Util\";\nimport {Game} from \"./Game\";\n\nexport default class LevelManager {\n    constructor() {\n        this.levels = [\n            {\n                zombieCount: 7,\n                spawnTime: {min: 1300, max: 1800},\n                zombieSpeed: 0.6,\n            },\n            {\n                zombieCount: 12,\n                spawnTime: {min: 900, max: 1400},\n                zombieSpeed: 0.7,\n            },\n            {\n                zombieCount: 25,\n                spawnTime: {min: 800, max: 1100},\n                zombieSpeed: 0.7,\n            },\n            {\n                zombieCount: 35,\n                spawnTime: {min: 750, max: 900},\n                zombieSpeed: 0.8,\n            },\n            {\n                zombieCount: 15,\n                spawnTime: {min: 1000, max: 1300},\n                zombieSpeed: 1.4,\n            },\n            {\n                zombieCount: 40,\n                spawnTime: {min: 750, max: 1200},\n                zombieSpeed: 0.9,\n            },\n            {\n                zombieCount: 50,\n                spawnTime: {min: 600, max: 700},\n                zombieSpeed: 1,\n            },\n            {\n                zombieCount: 60,\n                spawnTime: {min: 400, max: 600},\n                zombieSpeed: 1.2,\n            },\n            {\n                zombieCount: 30,\n                spawnTime: {min: 1000, max: 1300},\n                zombieSpeed: 1.4,\n            },\n        ];\n        this.currentLevelNum = 0;\n    }\n\n    next() {\n        if (this.currentLevelNum === this.levels.length) {\n            return;\n        }\n        this.currentLevelNum++;\n        this.currentLevel = this.levels[this.currentLevelNum - 1];\n        Game.ui.setRoundText(this.currentLevelNum);\n        this.tick();\n    }\n\n    tick() {\n        setTimeout(() => {\n            this.currentLevel.zombieCount--;\n            this.readyToSpawn = true;\n        }, Util.RandomInt(this.currentLevel.spawnTime.min, this.currentLevel.spawnTime.max));\n    }\n\n    shouldSpawn() {\n        if (this.readyToSpawn) {\n            this.readyToSpawn = false;\n            if (this.currentLevel.zombieCount > 0) {\n                this.tick();\n            }\n            return true;\n        }\n        return false;\n    }\n}","import * as PIXI from \"pixi.js\";\nimport * as ResourceManager from \"./ResourceManager\";\nimport {Entity} from \"./Entity\";\nimport * as Util from \"./Util\";\n\nconst torsoColours = [\"blue\", \"green\", \"orange\", \"purple\", \"grey\", \"red\"];\nconst hairColours = [\"brunette\", \"blonde\", \"ginger\"];\n\nexport default class Zombie extends Entity {\n    constructor(x, y, rotation, maxSpeed) {\n        super(20);\n\n        // legs\n        let legsSprite = new PIXI.AnimatedSprite(ResourceManager.GetFrames(\"normal_zombie_legs\"));\n        legsSprite.anchor.set(0.5, 0.55);\n        legsSprite.angle = 90;\n        legsSprite.play();\n        this.addChild(legsSprite);\n\n        // arms\n        let armsSprite = new PIXI.AnimatedSprite(ResourceManager.GetFrames(\"normal_zombie_arms\"));\n        armsSprite.anchor.set(0.5, 0.92);\n        armsSprite.angle = 90;\n        armsSprite.play();\n        this.addChild(armsSprite);\n\n        // torso\n        const randTorsoColour = torsoColours[Util.RandomInt(0, torsoColours.length - 1)];\n        let torsoSprite = new PIXI.AnimatedSprite(ResourceManager.GetFrames(\"normal_zombie_torso_\" + randTorsoColour));\n        torsoSprite.anchor.set(0.5);\n        torsoSprite.angle = 90;\n        torsoSprite.play();\n        this.addChild(torsoSprite);\n\n        // head\n        const randHairColour = hairColours[Util.RandomInt(0, hairColours.length - 1)];\n        let headSprite = new PIXI.AnimatedSprite(ResourceManager.GetFrames(\"normal_zombie_head_\" + randHairColour));\n        headSprite.anchor.set(0.53, 0.5);\n        headSprite.angle = 90;\n        headSprite.play();\n        this.addChild(headSprite);\n\n        // container\n        this.position.set(x, y);\n        this.scale.set(1.25);\n        // randomly flip\n        if (Util.RandomBool()) {\n            this.scale.y *= -1;\n        }\n        this.rotation = rotation;\n        this.speed = 0;\n        this.rotSpeed = 0.05;\n        this.acceleration = 0.02;\n        this.maxSpeed = maxSpeed;\n        this.setNormalSpeed();\n        this.health = 100;\n    }\n\n    setNormalSpeed() {\n        this.targetSpeed = this.maxSpeed;\n        // make leg animation faster than other sprites\n        this.children[0].animationSpeed = this.targetSpeed * 0.6;\n        for (let i = 1; i < this.children.length; i++) {\n            this.children[i].animationSpeed = this.targetSpeed * 0.4;\n        }\n    }\n\n    setSlowSpeed() {\n        this.targetSpeed = this.maxSpeed/3;\n        // make leg animation faster than other sprites\n        this.children[0].animationSpeed = this.targetSpeed * 0.6;\n        for (let i = 1; i < this.children.length; i++) {\n            this.children[i].animationSpeed = this.targetSpeed * 0.4;\n        }\n    }\n\n    setTargetFunc(targetFunc) {\n        this.targetFunc = targetFunc;\n    }\n\n    step(delta) {\n        let targetPos = this.targetFunc();\n        this.distToPlayer = this.distanceTo(targetPos);\n\n        // rotate to point in target's direction\n        let targetRot = this.angleBetween(targetPos) - this.rotation;\n        if (targetRot < -Math.PI) {\n            targetRot += Math.PI * 2;\n        } else if (targetRot > Math.PI) {\n            targetRot -= Math.PI * 2;\n        }\n        this.rotation += targetRot * delta * this.rotSpeed;\n\n        // accelerate/decelerate zombie\n        if (this.speed < this.targetSpeed) {\n            this.speed += this.acceleration;\n        } else if (this.speed > this.targetSpeed) {\n            this.speed -= this.acceleration;\n        }\n\n        // walk forwards\n        this.position.x += Math.sin(this.rotation + (Math.PI / 2)) * this.speed * delta;\n        this.position.y += Math.cos(this.rotation - (Math.PI / 2)) * this.speed * delta;\n    }\n\n    // subtracts hitPoints from zombie health. Returns true if zombie is dead, otherwise false.\n    applyDamage(hitPoints) {\n        this.health -= hitPoints;\n        return this.health <= 0;\n    }\n}","import * as ResourceManager from \"./ResourceManager\";\nimport * as Util from \"./Util\";\n\nexport function NewDirectionalBlood(x, y, rotation) {\n    let sprite = ResourceManager.GetSprite(\"directional_blood_splat\");\n    sprite.anchor.set(0.5, 0.6);\n    sprite.position.set(x, y);\n    sprite.rotation = rotation - Math.PI / 2;\n    sprite.scale.set(0.35 + (Math.random() / 10));\n    sprite.alpha = 0.6;\n    // randomly flip\n    if (Util.RandomBool()) {\n        sprite.scale.x *= -1;\n    }\n    return sprite;\n}\n\nexport function NewDownwardBlood(x, y) {\n    let sprite = ResourceManager.GetSprite(\"downward_blood_splat\");\n    sprite.anchor.set(0.5);\n    sprite.position.set(x, y);\n    sprite.rotation = Util.DegToRad(Util.RandomInt(0, 360));\n    sprite.scale.set(0.1 + (Math.random() / 10));\n    sprite.alpha = 0.6;\n    return sprite;\n}","import * as PIXI from \"pixi.js\";\nimport Player from \"./Player.js\";\nimport * as Util from \"./Util.js\";\nimport * as Input from \"./Input\";\nimport LevelManager from \"./LevelManager\";\nimport * as ResourceManager from \"./ResourceManager\";\nimport Zombie from \"./Zombie\";\nimport * as Decal from \"./Decal\";\nimport * as Projectile from \"./Projectile\";\nimport {Game} from \"./Game\";\nimport {AmmoDrop} from \"./Weapon\";\n\nexport default class World extends PIXI.Container {\n    constructor(app) {\n        super();\n\n        this.app = app;\n        this.sortableChildren = true;\n        this.zombies = [];\n        this.projectileManager = new Projectile.Manager(this);\n\n        // tiled grass\n        let groundSprite = new PIXI.TilingSprite(\n            ResourceManager.GetTexture(\"grass\"),\n            app.screen.width * 4,\n            app.screen.height * 4,\n        );\n        groundSprite.anchor.set(0.25);\n        groundSprite.position.set(-app.screen.width / 2, -app.screen.height / 2);\n        this.addChild(groundSprite);\n        // farm border bottom\n        let worldMapSpriteBottom = ResourceManager.GetSprite(\"farm_border_bottom\");\n        worldMapSpriteBottom.anchor.set(0.18, 0.25);\n        worldMapSpriteBottom.position.set(-app.screen.width / 2, -app.screen.height / 2);\n        this.addChild(worldMapSpriteBottom);\n        // blood decals\n        // TODO: use ParticleContainers for decals (one container per texture required)\n        this.bloodContainer = new PIXI.Container();\n        this.addChild(this.bloodContainer);\n        this.gibs = [];\n\n        // ammo drops\n        this.ammoDropContainer = new PIXI.Container();\n        this.addChild(this.ammoDropContainer);\n\n        // create player\n        this.player = new Player(app.screen.width / 2, app.screen.height / 2);\n        this.addChild(this.player);\n\n        // zombie layer\n        this.zombieContainer = new PIXI.Container();\n        this.addChild(this.zombieContainer);\n\n        // farm border\n        let worldMapSpriteTop = ResourceManager.GetSprite(\"farm_border_top\");\n        worldMapSpriteTop.anchor.set(0.18, 0.25);\n        worldMapSpriteTop.position.set(-app.screen.width / 2, -app.screen.height / 2);\n        this.addChild(worldMapSpriteTop);\n\n        // create levels\n        this.levelManager = new LevelManager();\n        this.levelManager.next();\n\n        // start main game loop\n        app.ticker.add(delta => {\n            this.step(delta);\n        });\n    }\n\n    step(delta) {\n        // determine if zombie should spawn\n        if (this.levelManager.shouldSpawn()) {\n            this.spawnZombie();\n        }\n\n        // start next round\n        if (this.levelManager.currentLevel.zombieCount === 0 && this.zombies.length === 0) {\n            this.levelManager.next();\n        }\n\n        // sort zombies by distance\n        this.zombies.sort((a, b) => a.distToPlayer - b.distToPlayer);\n\n        // update all zombies\n        for (let i = this.zombies.length - 1; i >= 0; i--) {\n            this.zombies[i].step(delta);\n\n            // determine if zombie is touching the zombie next closest to the player\n            this.zombies[i].setNormalSpeed();\n            if (i > 0) {\n                if (this.zombies[i].hitTestCircle(this.zombies[i - 1])) {\n                    this.zombies[i].setSlowSpeed();\n                }\n            }\n\n            // check player collision with zombies\n            if (this.player.alive && this.player.hitTestCircle(this.zombies[i])) {\n                this.endGame();\n            }\n        }\n\n        // update player\n        this.player.step(delta);\n\n        // make camera follow player\n        let playerPos = this.player.getGlobalPosition();\n        let cameraVel = {\n            x: Math.abs(playerPos.x - this.app.screen.width / 2) * 0.05,\n            y: Math.abs(playerPos.y - this.app.screen.height / 2) * 0.05,\n        };\n        if (cameraVel.x < 0.05) {\n            cameraVel.x = 0;\n        }\n        if (cameraVel.y < 0.05) {\n            cameraVel.y = 0;\n        }\n        if (playerPos.x < this.app.screen.width / 2) {\n            this.x += cameraVel.x;\n        } else if (playerPos.x > this.app.screen.width / 2) {\n            this.x -= cameraVel.x;\n        }\n        if (playerPos.y < this.app.screen.height / 2) {\n            this.y += cameraVel.y;\n        } else if (playerPos.y > this.app.screen.height / 2) {\n            this.y -= cameraVel.y;\n        }\n\n        // player collect ammo drops\n        for (let i = 0; i < this.ammoDropContainer.children.length; i++) {\n            let ammoDrop = this.ammoDropContainer.children[i];\n\n            if (this.player.alive && this.player.hitTestCircle(ammoDrop)) {\n                // top up armoury ammo counts\n                this.player.armoury.ammo[ammoDrop.ammoType.name].count += ammoDrop.ammoType.ammoDropSize;\n                ResourceManager.PlaySound(\"ammo_pickup\");\n\n                // remove ammo drop\n                this.ammoDropContainer.removeChild(ammoDrop);\n            }\n        }\n\n        // player attack\n        if (Input.isMouseDown() && this.player.alive) {\n            let projectiles = this.player.attack();\n            for (let projectile of projectiles) {\n                this.projectileManager.push(projectile);\n            }\n        }\n\n        // check collisions between projectiles and zombies\n        for (let i = this.projectileManager.projectiles.length - 1; i >= 0; i--) {\n            let projectile = this.projectileManager.projectiles[i];\n            projectile.step(delta);\n\n            for (let j = this.zombies.length - 1; j >= 0; j--) {\n                if (this.zombies[j].hitTestCircle(projectile)) {\n                    let zombie = this.zombies[j];\n                    if (zombie.applyDamage(projectile.damage)) {\n                        // zombie died - play flesh exploding sound\n                        ResourceManager.PlaySound(\"flesh_explode_\" + Util.RandomInt(1, 4));\n\n                        // directional blood splat decal\n                        let newSplat = new Decal.NewDirectionalBlood(zombie.x, zombie.y, zombie.rotation);\n                        this.bloodContainer.addChild(newSplat);\n\n                        // sometimes drop random ammo type\n                        if (Util.RandomInt(1, 6) === 1) {\n                            const ammoTypes = Object.keys(this.player.armoury.ammo);\n                            const randAmmoKey = ammoTypes[Util.RandomInt(0, ammoTypes.length - 1)];\n                            const randAmmoType = this.player.armoury.ammo[randAmmoKey];\n                            let ammoDrop = new AmmoDrop(zombie.x, zombie.y, randAmmoType);\n                            this.ammoDropContainer.addChild(ammoDrop);\n                        }\n\n                        // generate gibs\n                        let gibNums = Util.Shuffle([1, 2, 3, 4, 5, 6, 7]);\n                        for (let i = 0; i < 3; i++) {\n                            let gibSprite = ResourceManager.GetSprite(\"normal_zombie_gib_\" + gibNums[i]);\n                            gibSprite.position.set(zombie.x, zombie.y);\n                            gibSprite.scale.set(1.5);\n                            gibSprite.anchor.set(0.5);\n                            gibSprite.speed = Util.RandomInt(4, 12);\n                            gibSprite.rotDir = 1;\n                            let randOffset = Util.DegToRad(Util.RandomInt(0, 40));\n                            if (Util.RandomBool()) {\n                                randOffset *= -1;\n                                gibSprite.rotDir = -1;\n                            }\n                            let randRot = zombie.rotation + Math.PI + randOffset;\n                            gibSprite.yv = Math.sin(randRot);\n                            gibSprite.xv = Math.cos(randRot);\n                            this.gibs.push(gibSprite);\n                            this.bloodContainer.addChild(gibSprite);\n                        }\n\n                        // remove zombie\n                        this.zombieContainer.removeChild(zombie);\n                        this.zombies.splice(j, 1);\n\n                        // update kill counter\n                        Game.ui.incrementKillCounter();\n                    } else {\n                        // zombie took damage, but didn't die - play bullet impact sound\n                        ResourceManager.PlaySound(\"flesh_impact_\" + Util.RandomInt(1, 8));\n\n                        // downward blood splat decal\n                        let newSplat = new Decal.NewDownwardBlood(this.zombies[j].x, this.zombies[j].y);\n                        this.bloodContainer.addChild(newSplat);\n                    }\n\n                    // remove projectile\n                    this.projectileManager.drop(projectile);\n                    break;\n                }\n            }\n        }\n\n        // update gibs\n        for (let gib of this.gibs) {\n            if (gib.speed === 0) {\n                continue;\n            }\n            gib.x += gib.xv * gib.speed * delta;\n            gib.y += gib.yv * gib.speed * delta;\n            gib.rotation += gib.speed / 20 * gib.rotDir;\n            gib.speed *= 0.9;\n            if (gib.speed <= 0.05) {\n                gib.speed = 0;\n            }\n        }\n    }\n\n    spawnZombie() {\n        // create zombie\n        let randRadius = Util.DegToRad(Util.RandomInt(0, 360));\n        let spawnPos = {\n            x: this.player.position.x + (Math.cos(randRadius) * 450),\n            y: this.player.position.y + (Math.sin(randRadius) * 450),\n        };\n        const spawnAngle = this.player.angleBetween(spawnPos) + Math.PI;\n        let newZombie = new Zombie(spawnPos.x, spawnPos.y, spawnAngle, this.levelManager.currentLevel.zombieSpeed);\n        if (this.player.alive) {\n            newZombie.setTargetFunc(() => (this.player.position));\n        } else {\n            const newTarget = this.randomPositionOffScreen();\n            newZombie.setTargetFunc(() => (newTarget));\n        }\n        this.zombies.push(newZombie);\n        this.zombieContainer.addChild(newZombie);\n    }\n\n    endGame() {\n        this.player.die();\n\n        // set all zombies to an idle routine to leave the level bounds\n        for (let zombie of this.zombies) {\n            const newTarget = this.randomPositionOffScreen();\n            zombie.setTargetFunc(() => {\n                return newTarget;\n            });\n        }\n    }\n\n    randomPositionOffScreen() {\n        let randRadius = Util.DegToRad(Util.RandomInt(0, 360));\n        return {\n            x: this.player.position.x + Math.cos(randRadius) * 1000,\n            y: this.player.position.y + Math.sin(randRadius) * 1000,\n        };\n    }\n}","import * as PIXI from \"pixi.js\";\nimport {Game} from \"./Game\";\n\nconst numericLookup = {\n    1: \"st\",\n    2: \"nd\",\n    3: \"rd\",\n    4: \"th\",\n    5: \"th\",\n    6: \"th\",\n    7: \"th\",\n    8: \"th\",\n    9: \"th\",\n    10: \"th\",\n};\n\nexport default class UI extends PIXI.Container {\n    constructor() {\n        super();\n\n        let textStyle = new PIXI.TextStyle({\n            fontFamily: \"ds-zombie-cyr\",\n            fontSize: 26,\n            fill: 0xFFFFFF,\n            stroke: \"#000000\",\n            strokeThickness: 5,\n        });\n\n        // create level text\n        this.roundText = new PIXI.Text(\"\", textStyle);\n        this.roundText.x = 20;\n        this.roundText.y = 20;\n        this.setRoundText(1);\n        this.addChild(this.roundText);\n\n        // create weapon text\n        this.weaponText = new PIXI.Text(\"\", textStyle);\n        this.addChild(this.weaponText);\n        // create ammo text\n        this.ammoText = new PIXI.Text(\"\", textStyle);\n        this.addChild(this.ammoText);\n\n        // create kill counter text\n        this.killCountText = new PIXI.Text(\"\", textStyle);\n        this.killCount = -1;\n        this.addChild(this.killCountText);\n        this.incrementKillCounter();\n\n        // move to front\n        this.zIndex = 10;\n    }\n\n    setRoundText(round) {\n        this.roundText.text = round + numericLookup[round] + \" Wave\";\n    }\n\n    incrementKillCounter() {\n        this.killCount++;\n        if (this.killCount === 1) {\n            this.killCountText.text = this.killCount + \" Kill\";\n        } else {\n            this.killCountText.text = this.killCount + \" Kills\";\n        }\n        this.killCountText.x = Game.app.screen.width - this.killCountText.width - 20;\n        this.killCountText.y = 20;\n    }\n\n    setAmmoText(weaponName, loaded, unloaded) {\n        this.weaponText.text = weaponName;\n        this.weaponText.x = Game.app.screen.width - this.weaponText.width - 20;\n        this.weaponText.y = Game.app.screen.height - this.weaponText.height - 60;\n\n        this.ammoText.text = loaded + \" / \" + unloaded;\n        this.ammoText.x = Game.app.screen.width - this.ammoText.width - 20;\n        this.ammoText.y = Game.app.screen.height - this.ammoText.height - 20;\n    }\n}","import * as PIXI from \"pixi.js\";\nimport World from \"./World.js\";\nimport * as Input from \"./Input.js\";\nimport * as ResourceManager from \"./ResourceManager.js\";\nimport UI from \"./UI\";\nimport * as WebFont from \"webfontloader\";\n\nexport let Game = {\n    init(container) {\n        // ensure font loads before game start\n        WebFont.load({\n            custom: {\n                families: [\"ds-zombie-cyr\"],\n                urls: [\"fonts/ds-zombie-cyr.css\"]\n            },\n            active() {\n                Game.start(container);\n            },\n        });\n    },\n\n    start(container) {\n        // configure game\n        this.app = new PIXI.Application({\n            width: container.clientWidth,\n            height: container.clientHeight,\n            transparent: true,\n            antialias: true\n        });\n        container.appendChild(this.app.view);\n        this.app.stage.hitArea = this.app.screen;\n        this.app.stage.interactive = true;\n        this.app.stage.sortableChildren = true;\n\n        // load all required resources\n        ResourceManager.Load(() => {\n            // set up input listeners\n            Input.Init(this.app.stage);\n\n            // set up UI\n            this.ui = new UI();\n            this.app.stage.addChild(this.ui);\n\n            // start world\n            this.world = new World(this.app);\n            this.app.stage.addChild(this.world);\n        });\n    }\n};\n","import { render } from \"./Game.vue?vue&type=template&id=5e1dd4d8&scoped=true\"\nimport script from \"./Game.vue?vue&type=script&lang=js\"\nexport * from \"./Game.vue?vue&type=script&lang=js\"\n\nimport \"./Game.vue?vue&type=style&index=0&id=5e1dd4d8&scoped=true&lang=css\"\nscript.render = render\nscript.__scopeId = \"data-v-5e1dd4d8\"\n\nexport default script","import { render } from \"./App.vue?vue&type=template&id=4237dc88\"\nimport script from \"./App.vue?vue&type=script&lang=js\"\nexport * from \"./App.vue?vue&type=script&lang=js\"\n\nimport \"./App.vue?vue&type=style&index=0&id=4237dc88&lang=css\"\nscript.render = render\n\nexport default script","import { createApp } from \"vue\";\nimport App from \"./App.vue\";\n\ncreateApp(App).mount(\"#app\");\n","export * from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../node_modules/vue-loader-v16/dist/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./App.vue?vue&type=style&index=0&id=4237dc88&lang=css\""],"sourceRoot":""}